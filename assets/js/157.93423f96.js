(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{500:function(t,a,r){"use strict";r.r(a);var _=r(1),v=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"ddd来源介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddd来源介绍"}},[t._v("#")]),t._v(" DDD来源介绍")]),t._v(" "),a("p",[t._v("​领域建模和设计的重要性在很早之前就被一些软件开发人员所发现 ，Eric Evans将其定义为领域驱动设计（Domain-Driven Design，简称DDD）；近些年来这种自顶而下的设计方式越发被推崇。")]),t._v(" "),a("p",[t._v("本文以代码为引，从小处入手；同大家一起学习DDD。")]),t._v(" "),a("h2",{attrs:{id:"ddd架构的核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddd架构的核心"}},[t._v("#")]),t._v(" DDD架构的核心")]),t._v(" "),a("p",[a("strong",[t._v("提倡以业务为核心，解耦外部依赖，分离业务复杂度和技术复杂度。")])]),t._v(" "),a("h2",{attrs:{id:"ddd适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddd适用场景"}},[t._v("#")]),t._v(" DDD适用场景")]),t._v(" "),a("p",[t._v("DDD虽好，但不要贪杯。在实践DDD时，有两个点需要明确。")]),t._v(" "),a("p",[t._v("1、"),a("strong",[t._v("领域模型对设计能力要求很高，没把握用好，一个错误的抽象还不如不抽象，宁可不要用，也不要滥用，不要为了DDD而DDD。")])]),t._v(" "),a("p",[t._v("理解：DDD的学习和使用是有代价的，一个零DDD基础的团队，不要期望在一个项目中完美的使用DDD；应该是一步一步的引入DDD的思想。")]),t._v(" "),a("p",[t._v("2、"),a("strong",[t._v("只有复杂的系统才需要系统DDD。")])]),t._v(" "),a("p",[t._v("理解：DDD是为了治理业务而生的。")]),t._v(" "),a("p",[t._v("这里的复杂分为三个层次：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("业务间有复杂的联动关系。")])]),t._v(" "),a("li",[a("p",[t._v("系统需要持续维护，业务不断演化")])]),t._v(" "),a("li",[a("p",[t._v("需要隔离技术复杂度的场景。")])])]),t._v(" "),a("p",[t._v("ddd的便捷，是基于业务抽象被不断复用的。如果业务抽象没有复用的必要，也没有系统引入ddd的必要。")]),t._v(" "),a("p",[t._v("只需要使用一次的工具，不需要系统引入ddd。")]),t._v(" "),a("h2",{attrs:{id:"阅读前提"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阅读前提"}},[t._v("#")]),t._v(" 阅读前提")]),t._v(" "),a("p",[t._v("了解面向对象")]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("h3",{attrs:{id:"第一部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一部分"}},[t._v("#")]),t._v(" 第一部分：")]),t._v(" "),a("p",[a("strong",[t._v("文章：")])]),t._v(" "),a("p",[t._v("1、"),a("a",{attrs:{href:"https://blog.addai.cn/pages/210a5b/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DDD概览"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("目标：")])]),t._v(" "),a("p",[t._v("1、简单了解DDD的知识范围。")]),t._v(" "),a("h3",{attrs:{id:"第二部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二部分"}},[t._v("#")]),t._v(" 第二部分：")]),t._v(" "),a("p",[a("strong",[t._v("文章：")])]),t._v(" "),a("p",[t._v("1、"),a("a",{attrs:{href:"https://blog.addai.cn/pages/e880da/",target:"_blank",rel:"noopener noreferrer"}},[t._v("值对象、DP"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("2、"),a("a",{attrs:{href:"https://blog.addai.cn/pages/e88Odc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("实体、领域服务、应用服务"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("3、"),a("a",{attrs:{href:"https://blog.addai.cn/pages/e880df/",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于Cola的初步实践"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("目标：")])]),t._v(" "),a("p",[t._v("1、对不了解DDD的同学，引导认知DDD。")]),t._v(" "),a("p",[t._v("2、对在设计时DDD的同学，了解如何在编码中如何DDD。")]),t._v(" "),a("h2",{attrs:{id:"引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),a("p",[t._v("《领域驱动设计：软件核心复杂性应对之道》 作者： Eric Evans")]),t._v(" "),a("p",[t._v("《实现领域驱动设计》 作者：Vaughn Vernon（沃恩.弗农）")]),t._v(" "),a("p",[t._v("部分网络文章")])])}),[],!1,null,null,null);a.default=v.exports}}]);