(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{455:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("程序一般都是在内存中跑的，这章主要讲c++程序运行时的内存分配问题。")]),s._v(" "),t("p",[s._v("讲解包括：内存申请使用的关键字、各种变量在内存中的位置、程序代码在内存中的位置。")]),s._v(" "),t("p",[s._v("这篇会从网络中多篇文档中汲取能量，如果未能罗列引用望海涵")]),s._v(" "),t("h2",{attrs:{id:"什么是内存模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存模型"}},[s._v("#")]),s._v(" 什么是内存模型")]),s._v(" "),t("p",[s._v("内存模型就是一种语言它独特的管理者一套程序的机制")]),s._v(" "),t("p",[s._v("C语言会将内存区域划分成堆、栈、静态全局变量区、常量区；")]),s._v(" "),t("p",[s._v("C++则分为堆、栈、自由存储区、全局/静态变量区、常量存储区；")]),s._v(" "),t("p",[s._v("划分的目的是为了能够方便编译器的管理和运行")]),s._v(" "),t("h2",{attrs:{id:"内存的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存的分类"}},[s._v("#")]),s._v(" 内存的分类")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("分类标准")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("分区数量")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("两大分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("代码区、数据区")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("四大分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("代码区、全局区（全局/静态存储区）、栈区、堆区")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("c语言分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("堆、栈、静态全局变量区、常量区")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("c++语言分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("堆、栈、自由存储区、全局/静态变量区、常量存储区")])])])]),s._v(" "),t("p",[s._v("内存模型根据生命周期的不同分区 自由存储区、动态区、静态区\n我们就按照C++语言的内存划分区域来讲解内存管理机制")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.addai.cn/blog/202304092008990.png",alt:"内存分配"}})]),s._v(" "),t("p",[t("strong",[s._v("文本段（ELF）：")]),s._v(" 主要用于存放我们编写的代码，但是不是按照代码文本的形式存放，而是将代码文本编译成二进制代码，存放的是二进制代码，在编译时就已经确定这个区域存放的内容是什么了，并且这个区域是只读区域")]),s._v(" "),t("p",[t("strong",[s._v("DATA段：")]),s._v(" 这个区域主要用于存放编译阶段（非运行阶段时）就能确定的数据，也就是初始化的静态变量、全局变量和常量，这个区域是可读可写的。这也就是我们通常说的静态存储区")]),s._v(" "),t("p",[t("strong",[s._v("BSS段：")]),s._v(" 这个区域存放的是未曾初始化的静态变量、全局变量，但是不会存放常量，因为常量在定义的时候就一定会赋值了。未初始化的全局变量和静态变量，编译器在编译阶段都会将其默认为0")]),s._v(" "),t("p",[t("strong",[s._v("HEAP（堆）：")]),s._v(" 这个区域实在运行时使用的，主要是用来存放程序员分配和释放内存，程序结束时操作系统会对其进行回收，（程序员分配内存像malloc、free、new、delete）都是在这个区域进行的")]),s._v(" "),t("p",[t("strong",[s._v("STACK（栈）：")]),s._v(" 存放函数的参数值和局部变量，这个区域的数据是由编译器来自己分配和释放的，只要执行完这个函数，那么这些参数值和变量都会被释放掉")]),s._v(" "),t("p",[t("strong",[s._v("内核空间（env）环境变量：")]),s._v(" 这个区域是系统内部的区域，我们是不可编辑的")]),s._v(" "),t("h2",{attrs:{id:"各分区例程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#各分区例程"}},[s._v("#")]),s._v(" 各分区例程")]),s._v(" "),t("h3",{attrs:{id:"全局-静态存储区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局-静态存储区"}},[s._v("#")]),s._v(" 全局/静态存储区")]),s._v(" "),t("p",[s._v("这个区域有两个段，分别是 "),t("code",[s._v("BSS段")]),s._v(" 和 "),t("code",[s._v("DATA段")]),s._v(" ，均存放着"),t("code",[s._v("全局变量")]),s._v("和"),t("code",[s._v("静态变量")]),s._v("（包括"),t("code",[s._v("全局静态变量")]),s._v("和"),t("code",[s._v("局部静态变量")]),s._v("）")]),s._v(" "),t("p",[s._v("其中 BSS存放的是程序员编写的"),t("strong",[s._v("未初始化")]),s._v("的 "),t("code",[s._v("全局变量")]),s._v(" 和 "),t("code",[s._v("静态变量")]),s._v(" 而DATA存放"),t("strong",[s._v("已经初始化")]),s._v("的全局变量、静态变量和常量。")]),s._v(" "),t("p",[s._v("这其中C和C++的BSS还有区别，区别就是：C中的BSS段分为高地址和低地址，高地址是存放全局变量，低地址是存放静态未初始化")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*定义全局变量*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义未初始化的全局变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义初始化的全局变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义未初始化的静态变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义初始化的静态变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BSS:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_1:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_1:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_3:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_3:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DATA:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_2:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_2:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_4:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_4"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_4:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_4"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[t("strong",[s._v("运行结果：")])]),s._v(" "),t("div",{staticClass:"language-cmd line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("BSS:\nThe address of serven_1:00007FF7F3C2E180, The data of serven_1:0\nThe address of serven_3:00007FF7F3C2E184, The data of serven_3:0\nDATA:\nThe address of serven_2:00007FF7F3C2E000, The data of serven_2:2\nThe address of serven_4:00007FF7F3C2E004, The data of serven_4:4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("结果分析：")]),s._v("\n程序定义了两个全局变量 "),t("code",[s._v("serven_1")]),s._v(" 和 "),t("code",[s._v("serven_2")]),s._v(" ，两个静态变量 "),t("code",[s._v("serven_3")]),s._v(" 和 "),t("code",[s._v("serven_4")]),s._v(" ，其中 "),t("code",[s._v("serven_2")]),s._v(" 和 "),t("code",[s._v("serven_4")]),s._v(" 是初始化的，所以 "),t("code",[s._v("serven_1")]),s._v(" 和 "),t("code",[s._v("serven_3")]),s._v(" 是存放在 "),t("code",[s._v("BSS段")]),s._v(" ，并且编译器会将这两个未初始化的变量默认初始化为 "),t("code",[s._v("0")]),s._v(" ；而 "),t("code",[s._v("serven_2")]),s._v(" 和 "),t("code",[s._v("serven_4")]),s._v(" 这两个变量是初始化的，存放在 "),t("code",[s._v("DATA段")])]),s._v(" "),t("h3",{attrs:{id:"常量区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量区"}},[s._v("#")]),s._v(" 常量区")]),s._v(" "),t("p",[s._v("上面说到常量是存放在DATA段区域的，下面我们来看一下例子：")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*定于全局常量*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" serven_5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serven"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" serven_6 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serven"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" serven_7 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serven"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" serven_8 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" serven_7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serven"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"serven"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_5:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_5"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_5:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_5"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_6:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_6"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_6:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_6"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_7:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_7"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_7:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_7"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of serven_8:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_8"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of serven_8:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("serven_8"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of s:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of s:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The address of s2:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", The data of s2:"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_5 :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("serven_5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_6 :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("serven_6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_7 :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("serven_7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_8 :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("serven_8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of s :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of s2 :%p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[t("strong",[s._v("Release​运行结果：")])]),s._v(" "),t("div",{staticClass:"language-cmd line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("The address of serven_5:00007FF6558F5008, The data of serven_5:serven\nThe address of serven_6:00000096D82FFE60, The data of serven_6:serven\nThe address of serven_7:00000096D82FFE68, The data of serven_7:serven\nThe address of serven_8:00000096D82FFE70, The data of serven_8:serven\nThe address of s:11rven, The data of s:11rven\nThe address of s2:serven, The data of s2:serven\nThe Pointer of serven_5 :00007FF6558F32B0\nThe Pointer of serven_6 :00007FF6558F32B0\nThe Pointer of serven_7 :00007FF6558F32B0\nThe Pointer of serven_8 :00007FF6558F32B0\nThe Pointer of s :00000096D82FFE78\nThe Pointer of s2 :00000096D82FFE80\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("em",[s._v("这里需要注意的是上面的结果是release的输出，debug的结果并不一定相同。")])]),s._v(" "),t("p",[t("strong",[s._v("结果解析：")])]),s._v(" "),t("p",[s._v("变量 "),t("code",[s._v("serven_5")]),s._v(" 是常量，存储在 "),t("code",[s._v("DATA段")]),s._v(" 区域， "),t("code",[s._v("serven_6")]),s._v(" 是局部的常量、 "),t("code",[s._v("serven_7")]),s._v(" 和 "),t("code",[s._v("serven_8")]),s._v(" 是局部的变量指针，他们都是指向一个常量 “serven”，这个常量存储在常量区的，也就是存储在DATA区域，可以看到在后面打印serven_5~serven_8的时候的地址都是一样的，都是存储在DATA区域。")]),s._v(" "),t("p",[s._v("而 "),t("code",[s._v("s")]),s._v(" 和 "),t("code",[s._v("s2")]),s._v(" 是局部变量，存储在栈区域，可以看到代码中打印出来的指针都是在栈区域里面。")]),s._v(" "),t("p",[s._v("总结就是： "),t("code",[s._v("s")]),s._v(" 和 "),t("code",[s._v("s2")]),s._v(" 是定义在局部函数里面的变量，所以存放在栈区域，"),t("code",[s._v("serven_6")]),s._v(" ~ "),t("code",[s._v("serven_8")]),s._v(" 是定义在局部里面的指针，指向的是常量，所以指向的常量存放在DATA区域，而指针本身存放在栈中")]),s._v(" "),t("h3",{attrs:{id:"栈-stack-区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack-区域"}},[s._v("#")]),s._v(" 栈（Stack）区域")]),s._v(" "),t("p",[s._v("栈区域是编译器自动根据变量进行分配的，不是由程序员进行开辟的，所以编译器即会自动分配也会将其释放，这个区域主要存放函数的参数值、局部变量、形参等等。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("TEST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ser_x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ser_y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ser_z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_9 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_10 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_11 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of ser_x is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ser_x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of ser_y is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ser_y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of ser_z is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ser_z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_9(TEST) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_10(TEST) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_11(TEST) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_11"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_9 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_10 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_11 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_9(MAIN) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_10(MAIN) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_11(MAIN) is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_11"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("TEST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("serven_9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" serven_10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("serven_11"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" serven_12 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Pointer of serven_12 is: %p\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("serven_12"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[t("strong",[s._v("Debug​运行结果：")])]),s._v(" "),t("div",{staticClass:"language-cmd line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("The Pointer of serven_9(MAIN) is: 0000002338fff9ac\nThe Pointer of serven_10(MAIN) is: 0000002338fff9a8\nThe Pointer of serven_11(MAIN) is: 0000002338fff9a4\nThe Pointer of ser_x is: 0000002338fff980\nThe Pointer of ser_y is: 0000002338fff988\nThe Pointer of ser_z is: 0000002338fff990\nThe Pointer of serven_9(TEST) is: 0000002338fff96c\nThe Pointer of serven_10(TEST) is: 0000002338fff968\nThe Pointer of serven_11(TEST) is: 0000002338fff964\nThe Pointer of serven_12(MAIN) is: 0000002338fff9a0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[t("em",[s._v("这里注意：release版本，对局部变量有优化，结果就不同了")])]),s._v(" "),t("p",[t("strong",[s._v("结果解析：")]),s._v("\n首先我们先来看一下这个图，是内存管理机制里面的栈，可以看到main函数中定义的变量"),t("code",[s._v("serven_9")]),s._v(" ~ "),t("code",[s._v("serven_11")]),s._v("分别入栈，而且入栈的顺序是从高地址到低地址，每个变量占用4个字节，所以地址相差也就是4个字节")]),s._v(" "),t("p",[s._v("然后就是形参入栈，"),t("strong",[s._v("形参入栈顺序是从右往左入栈")]),s._v("，所以"),t("code",[s._v("ser_z~ser_x")]),s._v("的地址也是依次递减的")]),s._v(" "),t("p",[s._v("最后就是TEST函数里面的局部变量，将局部变量"),t("code",[s._v("serven_9 ~ serven_11")]),s._v("依次入栈，并且地址也是一次递减")]),s._v(" "),t("p",[s._v("而且可以看到"),t("code",[s._v("serven_12")]),s._v("的地址和"),t("code",[s._v("serven_11")]),s._v("是隔壁，由此可以看出，栈的先进后出，也就是调用完函数TEST后会把局部变量"),t("code",[s._v("serven_11（TEST）~serven_9（TEST）")]),s._v("、"),t("code",[s._v("serv_x~ser_z")]),s._v("全部出栈，然后再将"),t("code",[s._v("serven_12")]),s._v("入栈。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.addai.cn/blog/202304100100360.png",alt:"栈地址"}})]),s._v(" "),t("p",[s._v("但是，我们可以发现了定义"),t("code",[s._v("serven_11")]),s._v("之后的调用函数，函数的形参入栈的地址与s"),t("code",[s._v("erven_11")]),s._v("定义时的地址相差很远，大概有三个字节，这三个字节中有一个是"),t("code",[s._v("serven_11")]),s._v("，那么多出来两个字节是什么呢？")]),s._v(" "),t("p",[s._v("这是因为在调用函数的时候会进行一些操作：")]),s._v(" "),t("p",[s._v("首先我们需要了解几个概念："),t("code",[s._v("栈帧")]),s._v("、"),t("code",[s._v("寄存器esp")]),s._v("、"),t("code",[s._v("寄存器ebp")])]),s._v(" "),t("p",[t("code",[s._v("栈帧")]),s._v(":每个函数有自己的栈帧，栈帧中维持着所需要的各种信息（包括参数、返回地址、参数个数、其它）\n"),t("code",[s._v("寄存器esp")]),s._v(": 保存当前栈帧的栈顶\n"),t("code",[s._v("寄存器ebp")]),s._v(": 保存当前栈帧的栈底")]),s._v(" "),t("p",[s._v("那么函数在栈入参时候的结构为：")]),s._v(" "),t("p",[s._v("函数的局部变量：（ebp）最右参数->中间参数->最左参数->返回地址->运行时参数（esp）；")]),s._v(" "),t("h3",{attrs:{id:"堆-heap-区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap-区域"}},[s._v("#")]),s._v(" 堆（Heap）区域")]),s._v(" "),t("p",[s._v("这个区域是由程序员来进行分配内存和释放内存用的，当我们使用malloc/free、new/delete（这是在自由存储区上分配和释放的，某种意义上来说呢，起始自由存储区是堆的一个子集）。")]),s._v(" "),t("p",[s._v("在这里要注意的是，我们申请了空间内存一定要释放，如果没有释放那就会导致内存的泄露，后果很严重！！！你遇到过的电脑蓝屏也许就是内存泄漏引起的。")]),s._v(" "),t("h3",{attrs:{id:"堆和栈的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆和栈的区别"}},[s._v("#")]),s._v(" 堆和栈的区别")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("比较类别")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("堆")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("栈")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("管理方式")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("由程序员分配和释放")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("编译器自动管理")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("空间大小")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("最大可达4GB")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("空间有限")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("产生碎片")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("会造成空间碎片")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("不会")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("生长方向")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("向上生长（低地址-高地址）")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("向下生长（高地址-低地址）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("分配方式")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("malloc、new、calloc、realloc")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("编译器管理")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("分配效率")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("低")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("高")])])])]),s._v(" "),t("h3",{attrs:{id:"堆和自由存储区的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆和自由存储区的区别"}},[s._v("#")]),s._v(" 堆和自由存储区的区别")]),s._v(" "),t("p",[s._v("自由存储区其实上是一个逻辑概念")]),s._v(" "),t("p",[s._v("堆是物理概念。")]),s._v(" "),t("h3",{attrs:{id:"malloc-free和new-delete的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#malloc-free和new-delete的区别"}},[s._v("#")]),s._v(" malloc/free和new/delete的区别")]),s._v(" "),t("p",[s._v("（1）new、delete是C++中的操作符，而malloc和free是标准库函数。操作符可以在类的内部重载，malloc/free不行，唯一的关联只是在默认情况下new/delete调用malloc/free")]),s._v(" "),t("p",[s._v("（2）malloc/free(只是分配内存，不能执行构造函数，不能执行析构函数)，new/free。")]),s._v(" "),t("p",[s._v("（3）new返回的是指定类型的指针，并且可以自动计算所申请内存的大小。而 malloc需要我们计算申请内存的大小，并且在返回时强行转换为实际类型的指针。")]),s._v(" "),t("h3",{attrs:{id:"c-中new-delete的工作过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-中new-delete的工作过程"}},[s._v("#")]),s._v(" C++中new/delete的工作过程")]),s._v(" "),t("p",[t("strong",[s._v("申请的是普通的内置类型的空间：")])]),s._v(" "),t("p",[s._v("（1）调用 C++标准库中 operator new函数，传入大小。（如果申请的是0byte则强制转化成1byte）")]),s._v(" "),t("p",[s._v("（2）申请相对应的空间，如果没有足够的空间或其他问题且没有定义_new_hanlder，那么会抛出bad_alloc的异常并结束程序,如果定义了_new_hanlder回调函数，那么会一直不停的调用这个函数直到问题被解决为止")]),s._v(" "),t("p",[s._v("（3）返回申请到的内存的首地址.")]),s._v(" "),t("p",[t("strong",[s._v("申请的是类空间：")])]),s._v(" "),t("p",[s._v("（1）如果是申请的是0byte，强制转换为1byte")]),s._v(" "),t("p",[s._v("（2）申请相对应的空间，如果没有足够的空间或其他问题且没有定义_new_hanlder，那么会抛出bad_alloc的异常并结束程序")]),s._v(" "),t("p",[s._v("（3）如果定义了_new_hanlder回调函数，那么会一直不停的调用这个函数直到问题被解决为止。")]),s._v(" "),t("p",[s._v("（4）如果这个类没有定义任何构造函数，析构函数，且编译器没有合成，那么下面的步骤跟申请普通的内置类型是一样的。")]),s._v(" "),t("p",[s._v("（5）如果有构造函数或者析构函数，那么会调用一个库函数，具体什么库函数依编译器不同而不同，这个库函数会回调类的构造函数。")]),s._v(" "),t("p",[s._v("（6）如果在构造函数中发生异常，那么会释放刚刚申请的空间并返回异常")]),s._v(" "),t("p",[s._v("（7）返回申请到的内存的首地址")]),s._v(" "),t("p",[s._v("delete 与new相反，会先调用析构函数再去释放内存（delete 实际调用 operator delete）")]),s._v(" "),t("p",[s._v("operator new[]的形参是 sizeof(T)*N+4就是总大小加上一个4(用来保存个数);空间中前四个字节保存填充长度。然后执行N次operator new")]),s._v(" "),t("p",[s._v("operator delete[] 类似；")]),s._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/434850899",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://zhuanlan.zhihu.com/p/434850899"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_43340455/article/details/124786128",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/weixin_43340455/article/details/124786128"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);