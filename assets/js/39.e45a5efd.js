(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{386:function(_,e,v){"use strict";v.r(e);var a=v(1),t=Object(a.a)({},(function(){var _=this,e=_._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h2",{attrs:{id:"cmake"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmake"}},[_._v("#")]),_._v(" CMake")]),_._v(" "),e("p",[_._v("CMake 是一个跨平台的构建系统，可以用于自动生成各种不同平台编译器的构建文件。 CMake 使用一种类似于脚本的语言来描述项目的构建过程，并生成相应的 Makefile 或其他构建工具所需的配置文件。")]),_._v(" "),e("p",[e("strong",[_._v("下面是一些常见的CMake语法：")])]),_._v(" "),e("h3",{attrs:{id:"定义变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义变量"}},[_._v("#")]),_._v(" 定义变量")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("set()")]),_._v(" 命令来定义一个变量，如 "),e("code",[_._v("set(SOURCE_FILES main.cpp)")]),_._v("。")]),_._v(" "),e("p",[_._v("其中，"),e("code",[_._v("SOURCE_FILES")]),_._v(" 是变量名，"),e("code",[_._v("main.cpp")]),_._v(" 是变量值。在CMake中，变量可以是字符串、列表或布尔值。")]),_._v(" "),e("h3",{attrs:{id:"添加头文件搜索路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加头文件搜索路径"}},[_._v("#")]),_._v(" 添加头文件搜索路径")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("include_directories()")]),_._v(" 命令来添加头文件搜索路径，如 "),e("code",[_._v("include_directories(include)")]),_._v("。")]),_._v(" "),e("p",[_._v("其中，"),e("code",[_._v("include")]),_._v(" 是需要添加的头文件路径。该命令用于指定包含C/C++头文件的目录列表，以便编译器能够找到它们。")]),_._v(" "),e("h3",{attrs:{id:"添加库文件搜索路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加库文件搜索路径"}},[_._v("#")]),_._v(" 添加库文件搜索路径")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("link_directories()")]),_._v(" 命令来添加库文件搜索路径，如 "),e("code",[_._v("link_directories(lib)")]),_._v("。")]),_._v(" "),e("p",[_._v("其中，"),e("code",[_._v("lib")]),_._v(" 是需要添加的库文件路径。该命令用于指定包含库文件的目录列表，以便链接器能够找到它们。")]),_._v(" "),e("h3",{attrs:{id:"添加可执行文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加可执行文件"}},[_._v("#")]),_._v(" 添加可执行文件")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("add_executable()")]),_._v(" 命令来添加可执行文件，如 "),e("code",[_._v("add_executable(my_executable \\${SOURCE_FILES})")]),_._v("。")]),_._v(" "),e("p",[_._v("其中，my_executable 是可执行文件的名称，"),e("code",[_._v("\\${SOURCE_FILES}")]),_._v(" 是需要编译的源代码文件。该命令用于指定要生成的可执行文件的名称以及源代码文件的列表。")]),_._v(" "),e("h3",{attrs:{id:"添加库文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加库文件"}},[_._v("#")]),_._v(" 添加库文件")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("add_library()")]),_._v(" 命令来添加库文件，如 "),e("code",[_._v("add_library(my_library STATIC \\${SOURCE_FILES})")]),_._v("（静态库）或者 "),e("code",[_._v("add_library(my_library SHARED \\${SOURCE_FILES})")]),_._v("（动态库）。")]),_._v(" "),e("p",[_._v("其中，"),e("code",[_._v("my_library")]),_._v(" 是库文件的名称，"),e("code",[_._v("\\${SOURCE_FILES}")]),_._v(" 是需要编译的源代码文件。该命令用于指定要生成的库文件的名称、类型以及源代码文件的列表。")]),_._v(" "),e("h3",{attrs:{id:"链接库文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#链接库文件"}},[_._v("#")]),_._v(" 链接库文件")]),_._v(" "),e("p",[_._v("使用 "),e("code",[_._v("target_link_libraries()")]),_._v(" 命令来将库文件链接到目标文件中，如 "),e("code",[_._v("target_link_libraries(my_executable my_library)")]),_._v("。")]),_._v(" "),e("p",[_._v("其中，"),e("code",[_._v("my_executable")]),_._v(" 是可执行文件的名称，"),e("code",[_._v("my_library")]),_._v(" 是需要链接的库文件名称。该命令用于指定要链接到可执行文件或库文件中的库文件的列表。")]),_._v(" "),e("h3",{attrs:{id:"控制流语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制流语句"}},[_._v("#")]),_._v(" 控制流语句")]),_._v(" "),e("p",[_._v("CMake支持一些基本的控制流语句，如 "),e("code",[_._v("if()")]),_._v("、"),e("code",[_._v("else()")]),_._v("、"),e("code",[_._v("elseif()")]),_._v("和"),e("code",[_._v("endif()")]),_._v("，可用于根据条件设置变量或执行特定的操作。")]),_._v(" "),e("h3",{attrs:{id:"循环语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[_._v("#")]),_._v(" 循环语句")]),_._v(" "),e("p",[_._v("CMake也支持循环语句，如 "),e("code",[_._v("foreach()")]),_._v(" 和 "),e("code",[_._v("while()")]),_._v("，可用于遍历列表或实现特定的循环操作。")]),_._v(" "),e("h3",{attrs:{id:"自定义命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义命令"}},[_._v("#")]),_._v(" 自定义命令")]),_._v(" "),e("p",[_._v("CMake允许使用 "),e("code",[_._v("add_custom_command()")]),_._v(" 和 "),e("code",[_._v("add_custom_target()")]),_._v(" 命令来定义自定义构建步骤或目标，这些步骤或目标可以在构建过程中执行。")]),_._v(" "),e("h3",{attrs:{id:"安装规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装规则"}},[_._v("#")]),_._v(" 安装规则")]),_._v(" "),e("p",[_._v("CMake 提供了 "),e("code",[_._v("install()")]),_._v(" 命令用于描述安装规则，包括将可执行文件、库文件和其他资源复制到指定位置等操作。")]),_._v(" "),e("p",[_._v("以上是 CMake 中的一些常见语法，但并不限于此， CMake 还有许多高级特性，如宏、函数、模块化编程等，这些特性可以帮助开发者更方便地管理和构建项目。")])])}),[],!1,null,null,null);e.default=t.exports}}]);